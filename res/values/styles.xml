<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:android="http://schemas.android.com/apk/res/android">

    <!--
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    -->
    <style name="AppBaseTheme" parent="android:Theme.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>

    
    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>

    
    <style name="HowaboutCustomTheme" parent="@style/Theme.Sherlock.Light">
        <!-- If you want to use the default ViewPagerIndicator-styles, use the following: -->
        <!-- <item name="vpiTitlePageIndicatorStyle">@style/Widget.TitlePageIndicator</item> -->
        <!-- <item name="vpiTabPageIndicatorStyle">@style/Widget.TabPageIndicator</item> -->
        <item name="vpiTabPageIndicatorStyle">@style/HowaboutVpiTabPageIndicatorStyle</item>

        <!-- If you want to implement your custom style of CirclePageIndicator, do it like so: -->
        <!-- <item name="vpiCirclePageIndicatorStyle">@style/myCirclePageIndicator</item> -->

        <!-- Put whatever other styles you want to define in your custom theme -->
    </style>
    
    <style name="HowaboutVpiTabPageIndicatorStyle" parent="@style/Widget.TabPageIndicator">
        <item name="android:textColor">#FF444444</item>
    </style>

    <!-- <style name="myCirclePageIndicator" parent="Widget.CirclePageIndicator">
        <item name="fillColor">@color/my_custom_circle_indicator_fill_color</item>
    </style> -->

</resources>